{"version":3,"sources":["components/user.js","App.js","reportWebVitals.js","index.js"],"names":["user","props","children","class","TextField","id","color","label","variant","onChange","changeEvent","value","Button","onClick","delEvent","App","deleteUser","index","e","users","Object","assign","state","splice","setState","changeUserName","findIndex","name","target","UniqueId","enableUniqueIds","nextUniqueId","console","log","className","this","map","bind","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAkBeA,EAZF,SAACC,GACX,OACC,+BACI,6CAAgBA,EAAMC,YAD1B,IAC2C,uBACvC,sBAAKC,MAAM,KAAX,UACI,cAACC,EAAA,EAAD,CAAYC,GAAG,eAAeC,MAAM,YAAYC,MAAM,aAAaC,QAAQ,WAAWC,SAAUR,EAAMS,YAAaC,MAAOV,EAAMC,WAChI,cAACU,EAAA,EAAD,CAAQJ,QAAQ,YAAYF,MAAM,UAAUO,QAASZ,EAAMa,SAA3D,sB,iBC8CGC,E,kDAnDb,aAAc,IAAD,8BACX,gBAYJC,WAAa,SAACC,EAAOC,GACnB,IAAMC,EAAQC,OAAOC,OAAO,GAAI,EAAKC,MAAMH,OAC3CA,EAAMI,OAAON,EAAO,GACpB,EAAKO,SAAS,CAACL,MAAMA,KAhBR,EAmBfM,eAAiB,SAACpB,EAAGa,GACnB,IAAMD,EAAQ,EAAKK,MAAMH,MAAMO,WAAU,SAAC1B,GACxC,OAAOA,EAAKK,KAAOA,KAEfL,EAAOoB,OAAOC,OAAO,GAAI,EAAKC,MAAMH,MAAMF,IAChDjB,EAAK2B,KAAOT,EAAEU,OAAOjB,MACrB,IAAMQ,EAAQC,OAAOC,OAAO,GAAI,EAAKC,MAAMH,OAC3CA,EAAMF,GAASjB,EACf,EAAKwB,SAAS,CAACL,MAAMA,KAzBnBU,IAASC,gBAAT,gBACA,EAAKR,MAAQ,CACbH,MAAO,CACL,CAACd,GAAG,EAAK0B,eAAgBJ,KAAK,SAC9B,CAACtB,GAAG,EAAK0B,eAAgBJ,KAAK,SAC9B,CAACtB,GAAG,EAAK0B,eAAgBJ,KAAK,WAGlCK,QAAQC,IAAI,EAAKX,OAVJ,E,qDA6BL,IAAD,OACP,OACE,sBAAKY,UAAU,MAAf,UACE,gDACA,6BAEMC,KAAKb,MAAMH,MAAMiB,KAAI,SAACpC,EAAMiB,GAC5B,OACA,cAAC,EAAD,CAEAH,SAAU,EAAKE,WAAWqB,KAAK,EAAMpB,GAErCP,YAAa,EAAKe,eAAeY,KAAK,EAAMrC,EAAKK,IAJjD,SAKEL,EAAK2B,MAFF3B,EAAKK,gB,GAzCJiC,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fa17e15e.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\n\r\nconst user = (props) => {\r\n   return(\r\n    <li>\r\n        <span>Name:    {props.children}</span> <br />\r\n        <div class=\"bh\"> \r\n            <TextField  id=\"filled-basic\" color=\"secondary\" label=\"Enter name\" variant=\"outlined\" onChange={props.changeEvent} value={props.children}/>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={props.delEvent}>X</Button>\r\n        </div>\r\n        \r\n    </li>\r\n\r\n    )}\r\nexport default user;","import React, { Component } from 'react';\nimport './App.css';\nimport User from './components/user';\nimport UniqueId from 'react-html-id';\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    UniqueId.enableUniqueIds(this);\n    this.state = {\n    users: [\n      {id:this.nextUniqueId(), name:'Binod'},\n      {id:this.nextUniqueId(), name:'Sapin'},\n      {id:this.nextUniqueId(), name:'Maria'}\n      ] \n  }\n  console.log(this.state)\n}\n\ndeleteUser = (index, e) => {\n  const users = Object.assign([], this.state.users);\n  users.splice(index, 1);\n  this.setState({users:users})\n}\n\nchangeUserName = (id,e) => {\n  const index = this.state.users.findIndex((user)=>{\n    return user.id === id\n  });\n  const user = Object.assign({}, this.state.users[index]); \n  user.name = e.target.value;\n  const users = Object.assign([], this.state.users);\n  users[index] = user;\n  this.setState({users:users});\n}\nrender() {\n  return (\n    <div className=\"App\">\n      <h1> Student Info </h1>\n      <ul>\n          {\n            this.state.users.map((user, index)=>{\n            return(\n            <User \n           \n            delEvent={this.deleteUser.bind(this, index)}\n            key={user.id}\n            changeEvent={this.changeUserName.bind(this, user.id)}\n            >{user.name}</User>)\n            })\n          }\n      </ul>\n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}